---
# PLUGINS
# ==========================================

# Startup
# -------
- repo: Shougo/dein.vim
- repo: lifepillar/vim-solarized8

- repo: vim-airline/vim-airline
  hook_source: |
    let g:airline#extensions#branch#symbol = ''
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#left_sep = ' '
    let g:airline#extensions#tabline#left_alt_sep = '|'
    let g:airline#extensions#tabline#formatter = 'jsformatter'

- repo: vim-airline/vim-airline-themes
  hook_source: |
    let g:airline_solarized_bg = 'dark'
    let g:airline_theme = 'solarized'

- repo: thinca/vim-localrc
- repo: christoomey/vim-tmux-navigator
- repo: junegunn/vim-peekaboo
- repo: tpope/vim-sleuth
- repo: tpope/vim-fugitive
- repo: itchyny/vim-parenmatch

- repo: itchyny/vim-cursorword
  hook_add: |
    autocmd MyAutoCmd FileType denite,qf let b:cursorword=0
    autocmd MyAutoCmd InsertEnter * let b:cursorword=0
    autocmd MyAutoCmd InsertLeave * let b:cursorword=1

- repo: w0rp/ale
  hook_add: source $VIMPATH/config/plugins/ale.vim
  hook_source: |
    let g:ale_sign_error = '!E'
    let g:ale_sign_warning = '!W'
    let g:ale_sign_info = 'ℹ'

# Lazy Loading
# ==========================================

# Syntax
# ---------
# Ansible
- repo: pearofducks/ansible-vim
  on_ft:
    - ansible
    - ansible_hosts
    - ansible_template

# CSS
- repo: hail2u/vim-css3-syntax
  on_ft: css

- repo: ap/vim-css-color
  on_ft:
    - css
    - scss
    - sass

- repo: cakebaker/scss-syntax.vim
  on_ft:
    - scss
    - sass

- repo: groenewege/vim-less
  on_ft: less

- repo: othree/csscomplete.vim
  on_ft: css

# CSV
- repo: chrisbra/csv.vim
  on_ft: csv

# Docker
- repo: ekalinin/Dockerfile.vim
  on_ft:
    - Dockerfile
    - docker-compose

# Fish
- repo: dag/vim-fish
  on_ft: fish

# Git
- repo: tpope/vim-git
  on_ft:
    - gitcommit
    - gitconfig
    - gitrebase

# Go
- repo: fatih/vim-go
  on_ft:
    - go
    - gotexttmpl
    - gohtmltmpl
  hook_source: |
    let g:go_def_mapping_enabled = 0
    let g:go_loaded_gosnippets = 1
    let g:go_highlight_extra_types = 1
    let g:go_highlight_operators = 1
    let g:go_snippet_engine = 'neosnippet'

# HTML & Jinja
- repo: othree/html5.vim
  on_ft: html
  hook_add: |
    let g:html5_aria_attributes_complete = 1
    let g:html5_event_handler_attributes_complete = 0
    let g:html5_microdata_attributes_complete = 0
    let g:html5_rdfa_attributes_complete = 0

- repo: mitsuhiko/vim-jinja
  on_ft:
    - htmljinja
    - jinja

# i3
- repo: mboughaba/i3config.vim
  on_ft: i3config

# JavaScript
- repo: pangloss/vim-javascript
  on_ft:
    - javascript
    - javascript.jsx
    - jsx
  hook_source: |
    let g:javascript_plugin_jsdoc = 1
    let g:javascript_plugin_flow = 1
    highlight! link jsFutureKeys PreProc

- repo: othree/jspc.vim
  on_ft:
    - javascript
    - javascript.jsx
    - jsx

- repo: MaxMEllon/vim-jsx-pretty
  on_ft:
    - javascript
    - javascript.jsx
    - jsx

- repo: heavenshell/vim-jsdoc
  on_ft:
    - javascript
    - javascript.jsx
    - jsx
  hook_add: |
    let g:jsdoc_enable_es6 = 1

- repo: moll/vim-node
  on_ft:
    - javascript
    - javascript.jsx
    - jsx

# JSON
- repo: elzr/vim-json
  on_ft: json

# Logreview
- repo: andreshazard/vim-logreview
  on_ft: logreview

# Logstash
- repo: robbles/logstash.vim
  on_ft: logstash

# Lua
- repo: tbastos/vim-lua
  on_ft: lua

# Markdown
- repo: plasticboy/vim-markdown
  depends:
    - vim-json
    - vim-toml
  on_ft: markdown
  hook_add: |
    let g:vim_markdown_conceal = 0
    let g:vim_markdown_fenced_languages = [
      \ 'bash=sh',
      \ 'c++=cpp',
      \ 'ini=dosini',
      \ 'viml=vim',
      \ 'zsh=sh'
      \ ]
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_json_frontmatter = 1
    let g:vim_markdown_initial_foldlevel = 999
    let g:vim_markdown_new_list_item_indent = 2
    let g:vim_markdown_override_foldtext = 0
    let g:vim_markdown_toml_frontmatter = 1

- repo: rhysd/vim-gfm-syntax
  depends: vim-markdown
  on_ft: markdown
  hook_source: |
    let g:gfm_syntax_enable_always = 0
    let g:gfm_syntax_highlight_emoji = 0
    let g:gfm_syntax_enable_filetypes = ['markdown']

# Mutt
- repo: neomutt/neomutt
  on_ft:
    - mail
    - neomuttrc

# Nginx
- repo: othree/nginx-contrib-vim
  on_ft: nginx

# PHP
- repo: StanAngeloff/php.vim
  on_ft: php

- repo: shawncplus/phpcomplete.vim
  on_ft: php
  on_i: 1

# Portfile
- repo: jstrater/mpvim
  on_ft: portfile

# Postgres
- repo: exu/pgsql.vim
  on_ft: pgsql

# Python
- repo: vim-python/python-syntax
  on_ft: python

- repo: vim-scripts/python_match.vim
  on_ft: python

- repo: tmhedberg/SimpylFold
  on_ft: python

- repo: raimon49/requirements.txt.vim
  on_ft: requirements

# Raml
- repo: IN3D/vim-raml
  on_ft: raml

# Ruby
- repo: osyo-manga/vim-monster
  on_ft: ruby

# Rust
- repo: rust-lang/rust.vim
  on_ft: rust

# Salt
- repo: saltstack/salt-vim
  on_ft: sls

# Swift
- repo: toyamarinyon/vim-swift
  on_ft: swift

# Tmux
- repo: tmux-plugins/vim-tmux
  on_ft: tmux

# Toml
- repo: cespare/vim-toml
  on_ft: toml

# Vim
- repo: vim-jp/syntax-vim-ex
  on_ft: vim

# ==========================================
# Commands
# --------
- repo: tpope/vim-commentary
  on_map: <Plug>Commentary

- repo: t9md/vim-choosewin
  on_map:
    n: <Plug>
  hook_source: |
    let g:choosewin_label = 'SDFJKLZXCV'
    let g:choosewin_overlay_enable = 1
    let g:choosewin_statusline_replace = 1
    let g:choosewin_overlay_clear_multibyte = 0
    let g:choosewin_blink_on_land = 0
    let g:choosewin_color_label = {
      \ 'cterm': [ 236, 2 ], 'gui': [ '#555555', '#000000' ] }
    let g:choosewin_color_label_current = {
      \ 'cterm': [ 234, 220 ], 'gui': [ '#333333', '#000000' ] }
    let g:choosewin_color_other = {
      \ 'cterm': [ 235, 235 ], 'gui': [ '#333333' ] }
    let g:choosewin_color_overlay = {
      \ 'cterm': [ 2, 10 ], 'gui': [ '#88A2A4' ] }
    let g:choosewin_color_overlay_current = {
      \ 'cterm': [ 72, 64 ], 'gui': [ '#7BB292' ] }

- repo: kana/vim-niceblock
  on_map:
    x: <Plug>

- repo: guns/xterm-color-table.vim
  on_cmd: XtermColorTable

- repo: mbbill/undotree
  on_cmd: UndotreeToggle

- repo: metakirby5/codi.vim
  on_cmd: Codi

- repo: Shougo/vimproc.vim
  build: make
  on_func: vimproc#

- repo: reedes/vim-wordy
  on_cmd:
    - Wordy
    - NextWordy
    - PrevWordy

- repo: tweekmonster/helpful.vim
  on_cmd: HelpfulVersion

- repo: brooth/far.vim
  on_cmd:
    - Far
    - Farp
    - Fardo
    - Refar
    - Farundo
    - F
  hook_source: |
    source $VIMPATH/config/plugins/far.vim

- repo: mzlogin/vim-markdown-toc
  on_cmd:
    - GenTocGFM
    - GenTocRedcarpet
    - GenTocGitLab
    - UpdateToc
  hook_source: |
    let g:vmt_auto_update_on_save = 0

- repo: easymotion/vim-easymotion
  on_map:
    n: <Plug>
  hook_source: |
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_prompt = 'Jump to → '
    let g:EasyMotion_keys = 'fjdksweoavn'
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1

- repo: beloglazov/vim-online-thesaurus
  on_cmd:
    - OnlineThesaurusCurrentWord
    - Thesaurus
  hook_source: |
    let g:online_thesaurus_map_keys = 0

# ==========================================
# Interface
# ---------
- repo: haya14busa/vim-asterisk
  on_map:
    nv: <Plug>

- repo: rhysd/accelerated-jk
  on_map:
    n: <Plug>

- repo: haya14busa/vim-edgemotion
  on_map:
    nv: <Plug>

- repo: t9md/vim-quickhl
  on_map:
    nv: <Plug>

- repo: airblade/vim-gitgutter
  on_path: .*
  hook_source: |
    let g:gitgutter_map_keys = 0
    let g:gitgutter_sign_added = '+'
    let g:gitgutter_sign_modified = '*'
    let g:gitgutter_sign_removed = '-'
    let g:gitgutter_sign_removed_first_line = '--'
    let g:gitgutter_sign_modified_removed = '*-'
    let g:gitgutter_sh = $SHELL
    highlight! GitGutterAdd ctermfg=22 guifg=#006000 ctermbg=NONE guibg=NONE
    highlight! GitGutterChange ctermfg=58 guifg=#5F6000 ctermbg=NONE guibg=NONE
    highlight! GitGutterDelete ctermfg=52 guifg=#600000 ctermbg=NONE guibg=NONE
    highlight! GitGutterChangeDelete ctermfg=52 guifg=#600000 ctermbg=NONE guibg=NONE

- repo: nathanaelkane/vim-indent-guides
  on_cmd:
    - IndentGuidesEnable
    - IndentGuidesDisable
    - IndentGuidesToggle
  hook_post_source: |
    call indent_guides#init_script_vars()
    call indent_guides#highlight_colors()
  hook_add: |
    let g:indent_guides_color_change_percent = 3
    let g:indent_guides_autocmds_enabled = 0
    let g:indent_guides_default_mapping = 0
    let g:indent_guides_guide_size = 1
    let g:indent_guides_indent_levels = 15
    let g:custom_exclude = [ 'help', 'denite', 'codi' ]
    autocmd MyAutoCmd BufEnter *
      \ if ! empty(&l:filetype) && index(g:custom_exclude, &l:filetype) == -1
      \|   if g:indent_guides_autocmds_enabled == 0 && &l:expandtab
      \|     IndentGuidesEnable
      \|   elseif g:indent_guides_autocmds_enabled == 1 && ! &l:expandtab
      \|     IndentGuidesDisable
      \|   endif
      \| endif

- repo: MattesGroeger/vim-bookmarks
  on_path: .*
  hook_source: |
    let g:bookmark_sign = '⚐'
    let g:bookmark_auto_save_file = $DATAPATH.'/bookmarks'
    let g:bookmark_no_default_key_mappings = 1
    let g:bookmark_disable_ctrlp = 1
    highlight! BookmarkSign            ctermfg=12 guifg=#4EA9D7
    highlight! BookmarkAnnotationSign  ctermfg=11 guifg=#EACF49

- repo: rhysd/committia.vim
  on_path: COMMIT_EDITMSG
  hook_source: |
    let g:committia_min_window_width = 70

- repo: junegunn/goyo.vim
  depends: limelight.vim
  on_cmd: Goyo
  hook_source: |
    source $VIMPATH/config/plugins/goyo.vim

- repo: junegunn/limelight.vim
  on_cmd: Limelight

# ==========================================
# Completion
# ----------
- repo: Shougo/context_filetype.vim
  lazy: 1

- repo: Shougo/echodoc.vim
  on_event: CompleteDone
  hook_post_source: |
    call echodoc#enable()

- repo: mattn/emmet-vim
  on_i: 1
  on_ft:
    - html
    - css
    - javascript
    - javascript.jsx
    - jsx
  hook_source: |
    let g:use_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'

- repo: Raimondi/delimitMate
  on_i: 1
  hook_source: |
    let g:delimitMate_expand_cr = 1
    let g:delimitMate_excluded_ft = 'html, htmldjango, htmljinja'

# Snippets
- repo: Shougo/neosnippet.vim
  depends:
    - neosnippet-snippets
    - context_filetype.vim
  on_event: InsertCharPre
  on_ft: snippet
  hook_add: |
    let g:neosnippet#data_directory = $DATAPATH.'/snippets'
  hook_source: |
    let g:neosnippet#enable_snipmate_compatibility = 1
    let g:neosnippet#enable_completed_snippet = 1
    let g:neosnippet#expand_word_boundary = 1
    autocmd MyAutoCmd CompleteDone * call neosnippet#complete_done()
    autocmd MyAutoCmd InsertLeave * NeoSnippetClearMarkers

- repo: Shougo/neosnippet-snippets

# JavaScript
- repo: ternjs/tern_for_vim
  build: npm install
  if: executable('npm')
  on_i: 1
  on_ft:
    - javascript
    - javascript.jsx
    - jsx
  hook_add: |
    let g:tern#command = ['tern']
    let g:tern#arguments = ['--persistent']
    let g:tern_request_timeout = 1
    let g:tern_show_signature_in_pum = 0
  hook_post_source: |
    autocmd MyAutoCmd FileType javascript setlocal omnifunc=tern#Complete

# Python
- repo: davidhalter/jedi-vim
  on_ft: python
  hook_add: |
    let g:jedi#auto_vim_configuration = 0
    let g:jedi#completions_enabled = 0
    let g:jedi#smart_auto_mappings = 0
    let g:jedi#show_call_signatures = 1
  hook_source: |
    let g:jedi#max_doc_height = 100
    let g:jedi#popup_on_dot = 0
    let g:jedi#popup_select_first = 0
    let g:jedi#quickfix_window_height = 10
    let g:jedi#use_splits_not_buffers = 'right'
    let g:jedi#use_tag_stack = 0

# Only NeoVim
#------------------------------
- repo: Shougo/deoplete.nvim
  depends: context_filetype.vim
  if: has('nvim')
  on_event: InsertEnter
  hook_source: |
    source $VIMPATH/config/plugins/deoplete.vim
    call deoplete#enable()

- repo: Shougo/neco-syntax
  if: has('nvim')
  on_source:
    - deoplete.nvim
    - neocomplete.vim

# Go
- repo: zchee/deoplete-go
  if: has('nvim') && executable('go')
  build: make
  on_ft: go
  on_i: 1

# Haskell
- repo: eagletmt/neco-ghc
  on_ft: haskell

# Javascript
- repo: carlitux/deoplete-ternjs
  build: npm install -g tern
  if: has('nvim') && executable('npm')
  on_i: 1
  on_ft:
    - javascript
    - javascript.jsx
    - jsx
  hook_source: |
    let g:tern_request_timeout = 1
    let g:tern_show_signature_in_pum = 0

# Python
- repo: zchee/deoplete-jedi
  if: has('nvim')
  on_ft: python
  on_i: 1
  hook_source: |
    autocmd MyAutoCmd FileType python setlocal omnifunc=

# Ruby
- repo: fishbullet/deoplete-ruby
  on_ft: ruby

# Tmux
- repo: wellle/tmux-complete.vim
  if: has('nvim')
  on_i: 1
  on_ft: tmux
  hook_add: |
    let g:tmuxcomplete#trigger = ''

# Vim
- repo: Shougo/neco-vim
  on_ft: vim

# ZSH
- repo: zchee/deoplete-zsh
  on_ft: zsh

# ==========================================
# Denite
# ------
- repo: Shougo/denite.nvim
  on_cmd: Denite
  hook_source: source $VIMPATH/config/plugins/denite.vim

- repo: chemzqm/unite-location
  on_source: denite.nvim

- repo: chemzqm/denite-git
  on_source: denite.nvim

- repo: rafi/vim-denite-z
  on_source: denite.nvim

- repo: rafi/vim-denite-session
  on_source: denite.nvim

# ==========================================
# Operators
# ---------
- repo: kana/vim-operator-user
  lazy: 1

- repo: kana/vim-operator-replace
  depends: vim-operator-user
  on_map:
    vnx: <Plug>

- repo: rhysd/vim-operator-surround
  depends:
    - vim-operator-user
    - vim-textobj-multiblock
  on_map:
    vnx: <Plug>

- repo: haya14busa/vim-operator-flashy
  depends: vim-operator-user
  on_map:
    nx: <Plug>

# ==========================================
# Text objects
# ------------
- repo: kana/vim-textobj-user
  on_func: textobj#user#

- repo: terryma/vim-expand-region
  on_map:
    x: <Plug>

- repo: AndrewRadev/sideways.vim
  on_map:
    ox: <Plug>Sideways

- repo: AndrewRadev/splitjoin.vim
  on_map:
    n: <Plug>Splitjoin

- repo: AndrewRadev/linediff.vim
  on_cmd: Linediff

- repo: AndrewRadev/dsf.vim
  on_map:
    n: <Plug>Dsf
  hook_add: |
    let g:dsf_no_mappings = 1

- repo: osyo-manga/vim-textobj-multiblock
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_multiblock_no_default_key_mappings = 1

- repo: kana/vim-textobj-function
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_function_no_default_key_mappings = 1

#  vim: set ts=2 sw=2 tw=80 et :
