# Reference: http://i3wm.org/docs/userguide.html

#==============================================================================
# i3 general behavior →
#------------------------------------------------------------------------------
# Default vars
set $alt Mod1
set $super Mod4

# i3 behavior
workspace_auto_back_and_forth yes

# If focus should follow your mouse movements
focus_follows_mouse no

# By default, when switching focus to a client on a different output
# (e.g. focusing a client on workspace 3 on output VGA-1, coming from workspace 2 on LVDS-1),
# the mouse cursor is warped to the center of that client.
mouse_warping none

# Be pixel stingy <none|vertical|horizontal|both|smart>
hide_edge_borders smart

# Use Mouse+$alt to drag and resize floating windows
floating_modifier $alt

# DISABLED:
#floating_minimum_size 250 x 250
#floating_maximum_size 1920 x 0
#force_display_urgency_hint 1000 ms

# default tiling orientation
default_orientation vertical

#==============================================================================
# i3 gaps behavior →
#------------------------------------------------------------------------------
# Gaps will only work correctly if you disable window titlebars entirely.
# Unfortunately this is necessary due to the way i3 creates such bars on windows.
for_window [class="^.*"] border pixel 0

gaps inner 5
gaps outer 5

# Gaps are only used if more than one container on the workspace
smart_gaps on

# Draw borders around a container only if it is not the only container in this workspace
smart_borders on

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $super+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o           mode "$mode_gaps_outer"
    bindsym i           mode "$mode_gaps_inner"
    bindsym Return      mode "default"
    bindsym Escape      mode "default"
}

mode "$mode_gaps_inner" {
    bindsym plus        gaps inner current plus 5
    bindsym minus       gaps inner current minus 5
    bindsym 0           gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return      mode "default"
    bindsym Escape      mode "default"
}
mode "$mode_gaps_outer" {
    bindsym plus        gaps outer current plus 4
    bindsym minus       gaps outer current minus 4
    bindsym -1          gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 4
    bindsym Shift+minus gaps outer all minus 4
    bindsym Shift+-1    gaps outer all set 0

    bindsym Return      mode "default"
    bindsym Escape      mode "default"
}

#==============================================================================
# Workspaces →
#------------------------------------------------------------------------------
set $ws1  "1 "
set $ws2  "2 "
set $ws3  "3 "
set $ws4  "4 "
set $ws5  "5 "
set $ws6  "6 "
set $ws7  "7 "
set $ws8  "8 "
set $ws9  "9 "
set $ws10 "10 "

# Force workspaces to specific output monitor
# workspace "$ws1" output DP1


#==============================================================================
# Key bindings →
#------------------------------------------------------------------------------
# Change focus
bindsym $alt+h focus left
bindsym $alt+j focus down
bindsym $alt+k focus up
bindsym $alt+l focus right

# Alternative focus
bindsym $super+Left  focus left
bindsym $super+Down  focus down
bindsym $super+Up    focus up
bindsym $super+Right focus right

# Move focused window
bindsym $alt+Ctrl+h move left
bindsym $alt+Ctrl+j move down
bindsym $alt+Ctrl+k move up
bindsym $alt+Ctrl+l move right

# Alternatively, you can use the Super+Shift+Arrows:
bindsym $super+Shift+Left  move left
bindsym $super+Shift+Down  move down
bindsym $super+Shift+Up    move up
bindsym $super+Shift+Right move right

# Vert/horiz orientation and fullscreen
bindsym $alt+f fullscreen
bindsym $alt+Ctrl+g split h
bindsym $alt+Ctrl+v split v

# Toggle floating/tiling
bindsym $alt+t floating toggle

# Focus last floating/tiling container. Very helpful!
bindsym $alt+space focus mode_toggle

bindsym $alt+a focus parent
bindsym $alt+z focus child

# Scratchpad control
bindsym $alt+Ctrl+minus move scratchpad
bindsym $alt+minus scratchpad show

# i3 Session
bindsym $alt+Ctrl+q kill
bindsym $alt+Ctrl+e reload
bindsym $alt+Ctrl+r restart
bindsym $alt+Ctrl+Delete exec "i3-nagbar -t warning -m 'exit i3? This will end your X session.' -b 'Yes' 'i3-msg exit'"

# Change container layout (stacked, tabbed, toggle split)
bindsym $super+d layout stacking
bindsym $super+f layout tabbed
bindsym $super+g layout toggle split

# Toggle between stacking/tabbed/split (Use Super+x!)
bindsym $super+x layout toggle

# Toggle border modes (Use Super+b!)
bindsym $super+b border toggle

# Utils
# ------------
# Commands
set $brightness_up               "brightnessctl -q set +10"
set $brightness_down             "brightnessctl -q set -10"
set $media_play                  "playerctl play-pause"
set $media_next                  "playerctl next"
set $media_previous              "playerctl previous"
set $media_stop                  "playerctl stop"
set $vol_mute                    "py3-cmd click 1 volume_status"
set $vol_up                      "py3-cmd click 4 volume_status"
set $vol_down                    "py3-cmd click 5 volume_status"

# The awesome rofi.
bindsym --release $alt+Tab       exec "pgrep -x rofi && killall rofi || rofi -normal-window -show window"
bindsym --release $alt+r         exec "pgrep -x rofi && killall rofi || rofi -normal-window -show drun"

# Screenshot fullscreen
bindsym Print                    exec "maim -q 100 | xsel --clipboard -t image/png"

# Screenshot with selection
bindsym $super+Print             exec "maim -q 100 -s | xsel --clipboard -t image/png"

# Screenshot current focused window
bindsym Shift+Print              exec "maim -q 100 -i $(xdotool getactivewindow) | xsel --clipboard -t image/png"

# XF86 keys
bindsym XF86AudioPrev            exec $media_previous
bindsym XF86AudioPlay            exec $media_play
bindsym XF86AudioNext            exec $media_next
bindsym XF86AudioStop            exec $media_stop
bindsym XF86AudioMute            exec $vol_mute
bindsym XF86AudioLowerVolume     exec $vol_down
bindsym XF86AudioRaiseVolume     exec $vol_up

# Standard F-keys
bindsym F7                       exec $media_previous
bindsym F8                       exec $media_play
bindsym F9                       exec $media_next
bindsym F10                      exec $vol_mute
bindsym F11                      exec $vol_down
bindsym F12                      exec $vol_up

# Screen brightness controls
bindsym XF86MonBrightnessUp      exec $brightness_up
bindsym XF86MonBrightnessDown    exec $brightness_down


# Quick Actions
# ------------
# Apps
bindsym $alt+Shift+b             exec "$BROWSER"
bindsym $alt+Shift+f             exec "$TERMINAL -e ranger"
bindsym $alt+Shift+i             exec "$TERMINAL -e htop"
bindsym $alt+Return              exec "$TERMINAL"


# Workspaces
# ----------
# Helpful: Rename workspaces on-the-fly
bindsym $alt+Ctrl+a              exec i3-input -F 'rename workspace to %s' -P 'New name: '

# Moving whole workspaces or containers to other outputs
bindsym $alt+Home                move workspace to output left
bindsym $alt+End                 move workspace to output right
bindsym $alt+Ctrl+Home           move container to output left
bindsym $alt+Ctrl+End            move container to output right

# Switch to workspace
bindsym $alt+1 workspace $ws1
bindsym $alt+2 workspace $ws2
bindsym $alt+3 workspace $ws3
bindsym $alt+4 workspace $ws4
bindsym $alt+5 workspace $ws5
bindsym $alt+6 workspace $ws6
bindsym $alt+7 workspace $ws7
bindsym $alt+8 workspace $ws8

# Move focused container to workspace
bindsym $alt+Ctrl+1 move container to workspace $ws1
bindsym $alt+Ctrl+2 move container to workspace $ws2
bindsym $alt+Ctrl+3 move container to workspace $ws3
bindsym $alt+Ctrl+4 move container to workspace $ws4
bindsym $alt+Ctrl+5 move container to workspace $ws5
bindsym $alt+Ctrl+6 move container to workspace $ws6
bindsym $alt+Ctrl+7 move container to workspace $ws7
bindsym $alt+Ctrl+8 move container to workspace $ws8


#==============================================================================
# Look 'n Feel →
#------------------------------------------------------------------------------
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango: DejaVu Sans Mono, FontAwesome 11

# Other nice fonts
# Awesome ttf version 5 has no space, causes a bug in Pango.
# Use the otf version: otf-font-awesome.
# https://bugs.archlinux.org/task/56899
# font pango: Noto Sans, FontAwesome 11
font pango: Noto Sans, Font Awesome 5 Free, Font Awesome 5 Brands 11

# Borders
new_window pixel 2
new_float pixel 0

# Solarized Colors
set_from_resource $base03  color8  #000000
set_from_resource $base02  color0  #000000
set_from_resource $base01  color10 #000000
set_from_resource $base00  color11 #000000
set_from_resource $base0   color12 #000000
set_from_resource $base1   color14 #000000
set_from_resource $base2   color7  #000000
set_from_resource $base3   color15 #000000
set_from_resource $yellow  color3  #000000
set_from_resource $orange  color9  #000000
set_from_resource $red     color1  #000000
set_from_resource $magenta color5  #000000
set_from_resource $violet  color13 #000000
set_from_resource $blue    color4  #000000
set_from_resource $cyan    color6  #000000
set_from_resource $green   color2  #000000

# Class                  Border   Backgr.  Text    Indicator
client.focused           $green   $green   $base3  $violet
client.focused_inactive  $base02  $base02  $base2  $violet
client.unfocused         $base02  $base02  $base1  $base01
client.urgent            $magenta $magenta $base3  $red

bar {
    colors {
        background          $base02
        separator           $base01
        statusline          $base2

        # workspace type    Border     Backgr     text
        focused_workspace   $base3     $green     $base3
        active_workspace    $base3     $violet    $base3
        inactive_workspace  $base3     $base1     $base03
        urgent_workspace    $magenta   $magenta   $base3
    }
    position          top
    separator_symbol  "  |  "
    status_command    py3status --dbus-notify
    tray_output       primary
    tray_padding      3px
}

#==============================================================================
# Workspace → App assignment
#------------------------------------------------------------------------------
# Media
#assign [class="Vlc"] → $w2
#assign [class="mpv"] → $w2
#assign [class="Google-chrome-stable"] → $w3


#==============================================================================
# App window behavior →
#------------------------------------------------------------------------------
for_window [class=".*"] sticky enable
for_window [window_role="About"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="^Preferences$"] floating enable
for_window [window_role="task_dialog"] floating enable

for_window [class="Code"] floating enable
for_window [class="Firefox"] floating enable
for_window [class="Gimp"] floating enable
for_window [class="Google-chrome"] floating enable
for_window [class="Keybase"] floating enable
for_window [class="mpv"] floating enable
for_window [title="^Qalculate!$"] floating enable
for_window [class="Peek"] floating enable
for_window [class="Pinentry"] floating enable
for_window [class="Rofi"] floating enable
for_window [class="Slack"] floating enable
for_window [class="Tor Browser"] floating enable
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="vlc"] floating enable
for_window [class="Wine"] floating enable
for_window [class="Wireshark"] floating enable
for_window [class="Zoom"] floating enable, border none
for_window [class="zeal"] floating enable, border none


#==============================================================================
# Modes and their key bindings →
#------------------------------------------------------------------------------
# resize window (you can also use the mouse for that)
set $resize_mode Resize: (hjkl) small, (arrows) normal
mode "$resize_mode" {
    # Small 5 step resize
    bindsym h resize shrink width 5 px or 5 ppt
    bindsym j resize grow height 5 px or 5 ppt
    bindsym k resize shrink height 5 px or 5 ppt
    bindsym l resize grow width 5 px or 5 ppt

    # Larger shrink/grow, 10 step
    bindsym Left  resize shrink width 10 px or 10 ppt
    bindsym Down  resize grow height 10 px or 10 ppt
    bindsym Up    resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # Back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $super+r mode "$resize_mode"

# Logout confirm
set $i3exit ${XDG_CONFIG_HOME}/i3/bin/i3-exit
set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec $i3exit lock, mode "default"
    bindsym e exec $i3exit logout, mode "default"
    bindsym s exec $i3exit suspend, mode "default"
    bindsym r exec $i3exit reboot, mode "default"
    bindsym Shift+s exec $i3exit shutdown, mode "default"

    # Back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $super+Pause mode "$mode_system"

#==============================================================================
# Autostart →
#------------------------------------------------------------------------------
# Handle Monitors
exec_always "autorandr --change &"

# Compositor
exec_always "compton -b &"

# Set Background
exec_always "hsetroot -solid '#040d24' &"

# Numlock On
exec_always "numlockx &"

# Unclutter (hide cursor)
# Hide mouse and allow jitter
# Dont send pseudo events - prevents flickering on top of some GTK apps
exec_always "pgrep -x unclutter || (unclutter -idle 3 -jitter 5 -noevents &)"

# Notifications daemon
exec_always "pgrep -x dunst || (dunst &)"

# f.lux / night shift
exec_always "pgrep -x redshift || (redshift &)"

# Network Management
exec_always "pgrep -x nm-applet || (nm-applet &)"

# vim: set ft=i3config ts=2 sw=4 tw=80 et :
