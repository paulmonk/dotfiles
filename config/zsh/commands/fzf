#!/usr/bin/env zsh

#-------------------------------------------
# FZF
#-------------------------------------------

# Defaults
#-------------------------
if [[ -s "/usr/share/fzf/key-bindings.zsh" ]]; then
  source "/usr/share/fzf/key-bindings.zsh"
fi
if [[ -s "/usr/share/fzf/completion.zsh" ]]; then
  source "/usr/share/fzf/completion.zsh"
fi

# General
#-------------------------
# Default Command
if (( $+commands[rg] )); then
  export FZF_DEFAULT_COMMAND="rg --hidden --files --smart-case --follow "
elif (( $+commands[ag] )); then
  export FZF_DEFAULT_COMMAND="ag --hidden --follow --nogroup -g "
fi

# Default Opts
# Solarized Dark color scheme
export FZF_DEFAULT_OPTS="
  --color=bg+:#073642,bg:#002b36,spinner:#719e07,hl:#586e75
  --color=fg:#839496,header:#586e75,info:#cb4b16,pointer:#719e07
  --color=marker:#719e07,fg+:#839496,prompt:#719e07,hl+:#719e07
  --history ${XDG_DATA_HOME}/fzf/history
  --reverse --height 50% --multi
"

# Alt C:
if (( $+commands[fd] )); then
  export FZF_ALT_C_COMMAND="fd --type d --hidden --follow "
fi
export FZF_ALT_C_OPTS="--select-1 --exit-0"

# Ctrl T:
# Automatically select if only 1 and exit if list is empty.
export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
export FZF_CTRL_T_OPTS="--select-1 --exit-0"

# Keybindings
#-------------------------
# Use fzf for history if available
fzf-history-widget-accept() {
    fzf-history-widget
    zle accept-line
}
zle     -N     fzf-history-widget-accept
bindkey '^X^R' fzf-history-widget-accept


# Completion
#-------------------------
if (( $+commands[fd] )); then
  # Use fd (https://github.com/sharkdp/fd) instead of the default find
  # command for listing path candidates.
  # - The first argument to the function ($1) is the base path to start traversal
  # - See the source code (completion.{bash,zsh}) for the details.
  _fzf_compgen_path() {
    fd --hidden --follow . "${1}"
  }

  # Use fd to generate the list for directory completion
  _fzf_compgen_dir() {
    fd --type d --hidden --follow . "${1}"
  }
fi

# Use Ctrl+T to complete with FZF
export FZF_COMPLETION_TRIGGER=""
bindkey '^T' fzf-completion
bindkey '^I' ${fzf_default_completion}
