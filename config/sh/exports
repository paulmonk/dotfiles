#!/bin/sh

#------------------------------------------------------------------------------
# This file contains most of our environment exports.
#------------------------------------------------------------------------------
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_DATA_HOME="${HOME}/.local/share"

# macOS
if [ "$(uname -s)" = "Darwin" ]; then
  # Prefix
  export PREFIX="${XDG_DATA_HOME}/homebrew"

  # XDG
  export XDG_RUNTIME_DIR="/tmp/run"
  [ ! -d "${XDG_RUNTIME_DIR}" ] && mkdir -m 0700 "${XDG_RUNTIME_DIR}"

  # Homebrew opts
  # Abort installation of cask if no checksum is defined
  export HOMEBREW_CASK_OPTS="--require-sha"
  # Force use of our curlrc
  export HOMEBREW_CURLRC="1"
  # Disable anonymous statistics collections
  export HOMEBREW_NO_ANALYTICS="1"
  # Disable automatic updates to keep in control of brew updates
  export HOMEBREW_NO_AUTO_UPDATE="1"
  # When checking out a public repository, by default, your username is always sent, not now.
  export HOMEBREW_NO_GITHUB_API="1"
  # Avoid protocol downgrades from HTTPS to HTTP via redirect
  export HOMEBREW_NO_INSECURE_REDIRECT="1"
  # brew upgrade always assumes --cleanup has been passed
  export HOMEBREW_UPGRADE_CLEANUP="1"

  # Use homebrew GNU tools instead of system BSD
  for gnu_tool in "coreutils" "dateutils" "findutils" "moreutils" "gnu-sed"; do
    export PATH="${PREFIX}/opt/${gnu_tool}/libexec/gnubin:${PATH}"
    export MANPATH="${PREFIX}/opt/${gnu_tool}/libexec/gnuman:${MANPATH}"
  done

  # Add homebrew bin
  export PATH="${PREFIX}/bin:${PREFIX}/sbin:${PATH}"

  # Set defaults
  export BROWSER="open"
  export TERMINAL="open"

  # Android SDK and tools
  if [ -d "${HOME}/Library/Android/sdk" ]; then
    export ANDROID_SDK_ROOT="${HOME}/Library/Android/sdk"
    export PATH="${PATH}:${ANDROID_SDK_ROOT}/tools"
    export PATH="${PATH}:${ANDROID_SDK_ROOT}/platform-tools"
  fi

  # Make
  MAKEFLAGS="-j $(sysctl -n hw.ncpu)"
  export MAKEFLAGS
else
  # Prefix
  export PREFIX="/usr"

  # XDG
  export XDG_RUNTIME_DIR="/run"

  # Set defaults
  export BROWSER="${PREFIX}/bin/firefox -P default --private-window"
  export TERMINAL="${PREFIX}/bin/sakura"

  # Android SDK and tools
  if [ -d "${XDG_CONFIG_HOME}/android" ]; then
    export ANDROID_SDK_HOME="${XDG_CONFIG_HOME}/android"
    export ANDROID_EMULATOR_HOME="${ANDROID_SDK_HOME}/emulator"
    export ANDROID_AVD_HOME="${ANDROID_EMULATOR_HOME}/avd"
  fi
  if [ -d "${XDG_DATA_HOME}/android/ndk" ]; then
    export ANDROID_NDK_ROOT="${XDG_DATA_HOME}/android/ndk"
  fi
  if [ -d "${XDG_DATA_HOME}/android/sdk" ]; then
    export ANDROID_SDK_ROOT="${XDG_DATA_HOME}/android/sdk"
    export PATH="${PATH}:${ANDROID_SDK_ROOT}/tools"
    export PATH="${PATH}:${ANDROID_SDK_ROOT}/platform-tools"
  fi

  # Aurutils
  export AUR_PAGER="${PREFIX}/bin/ranger"

  # Forces QT to use GTK icons
  export DESKTOP_SESSION="gnome"

  # Pull GTK2 RC files from the standard config location, similar to gtk-3.0
  export GTK2_RC_FILES="${XDG_CONFIG_HOME}/gtk-2.0/gtkrc"

  # Make
  MAKEFLAGS="-j $(nproc)"
  export MAKEFLAGS

  # https://github.com/zealdocs/zeal/issues/172
  export QT_QPA_PLATFORMTHEME="gtk2"
fi

# Defaults
export LANG="en_GB.UTF-8"
export PAGER="less"

# Defaults: Editor
if command -v nvim >/dev/null 2>&1; then
  export EDITOR="nvim"
  export MANPAGER="nvim -c 'set ft=man' -"
elif command -v vim >/dev/null 2>&1; then
  export EDITOR="vim"
  export MANPAGER="vim -c 'set ft=man' -"
else
  export EDITOR="vi"
  # Donâ€™t clear the screen after quitting a manual page
  export MANPAGER="less -X"
fi
export VISUAL="${EDITOR}"

# Defaults: Mail
if command -v neomutt >/dev/null 2>&1; then
  export MAIL="neomutt"
else
  export MAIL="mutt"
fi

# Local Bin
export PATH="${HOME}/.local/bin:${PATH}"

# Ack configuration
if [ -f "${XDG_CONFIG_HOME}/ack/ackrc" ]; then
  export ACKRC="${XDG_CONFIG_HOME}/ack/ackrc"
fi
export ACK_PAGER_COLOR="less -x4SRFX"

# Bat
export BAT_THEME="TwoDark"

# Curl
export CURL_HOME="${XDG_CONFIG_HOME}/curl"
# .netrc
if [ -f "${XDG_CONFIG_HOME}/netrc/config" ]; then
  export CURLOPT_NETRC_FILE="${XDG_CONFIG_HOME}/netrc/config"
fi

# Docker
export DOCKER_CONFIG="${XDG_CONFIG_HOME}/docker"
if command -v docker-machine >/dev/null 2>&1; then
  export MACHINE_STORAGE_PATH="${XDG_DATA_HOME}/docker-machine"
fi

# Facebook PathPicker
export FPP_DIR="${XDG_CACHE_HOME}/fpp"

# GCC
export GCC_COLORS="1"

# GNUPG
export GNUPGHOME="${XDG_CONFIG_HOME}/gnupg"

# GO configuration
export GOPATH="${XDG_DATA_HOME}/go"
export PATH="${PATH}:${GOPATH}/bin"

# Haskell cabal configuration
export PATH="${PATH}:${HOME}/.cabal/bin"

# HTTPIE
export HTTPIE_CONFIG_DIR="${XDG_CONFIG_HOME}/httpie"

# JAVA openjdk.
export _JAVA_OPTIONS="-Djava.util.prefs.userRoot=\"${XDG_CONFIG_HOME}/java\""

# LESS
export LESS="--tabs=4 --quit-if-one-screen --ignore-case --no-init --QUIET --LONG-PROMPT --RAW-CONTROL-CHARS"
export LESSCHARSET="UTF-8"
export LESSHISTFILE="${XDG_CACHE_HOME}/less/history"
export LESSKEY="${XDG_CONFIG_HOME}/less/lesskey/output"

# Lua user config
export LUAROCKS_CONFIG="${XDG_CONFIG_HOME}/luarocks/config.lua"

# MariaDB / MySQL
export MYSQL_HISTFILE="${XDG_DATA_HOME}/mysql/history"

# Ncurses
# Look for terminfo files under data
if [ -d "${XDG_DATA_HOME}/terminfo" ]; then
  export TERMINFO="${XDG_DATA_HOME}/terminfo"
  export TERMINFO_DIRS="${XDG_DATA_HOME}/terminfo:${PREFIX}/share/terminfo"
fi

# Node / NPM
export BABEL_CACHE_PATH="${XDG_CACHE_HOME}/babel.json"
export NODE_REPL_HISTORY="${XDG_DATA_HOME}/node/repl_history"
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}/npm/npmrc"
export PATH="${PATH}:${XDG_DATA_HOME}/npm/bin"

# NotMuch
export NOTMUCH_CONFIG="${XDG_CONFIG_HOME}/notmuch/config"
export NMBGIT="${XDG_DATA_HOME}/notmuch/nmbug"

# Pass
export PASSWORD_STORE_DIR="${XDG_DATA_HOME}/pass"

# Postgresql
export PSQLRC="${XDG_CONFIG_HOME}/pg/psqlrc"
export PSQL_HISTORY="${XDG_CACHE_HOME}/pg/psql_history"
export PGPASSFILE="${XDG_CONFIG_HOME}/pg/pgpass"
export PGSERVICEFILE="${XDG_CONFIG_HOME}/pg/pg_service.conf"

# Python
export IPYTHONDIR="${XDG_CONFIG_HOME}/ipython"
export JUPYTER_CONFIG_DIR="${XDG_CONFIG_HOME}/jupyter"
export PYLINTHOME="${XDG_CACHE_HOME}/pylint"
export PYTHON_EGG_CACHE="${XDG_CACHE_HOME}/python_eggs"
# User site-packages directory
export PYTHONUSERBASE="${XDG_DATA_HOME}/python"
export PATH="${PATH}:${PYTHONUSERBASE}/bin"
# Disable virtualenv's prompt display
export VIRTUAL_ENV_DISABLE_PROMPT=1

# Readline
export INPUTRC="${XDG_CONFIG_HOME}/readline/inputrc"

# Ruby: Always install ruby gems local to the user
export GEMRC="${XDG_CONFIG_HOME}/gem/gemrc"
GEM_HOME="${XDG_DATA_HOME}/gem/$(ruby -e 'puts RbConfig::CONFIG["ruby_version"]')"
export GEM_HOME
export GEM_PATH=${GEM_HOME}
export GEM_SPEC_CACHE="${XDG_CACHE_HOME}/gem/specs"
export PATH="${PATH}:${GEM_HOME}/bin"

# Rust Cargo configuration
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
export PATH="${PATH}:${CARGO_HOME}/bin"
export RUSTUP_HOME="${XDG_DATA_HOME}/rustup"

# sudo
export SUDO_PROMPT="sudo password for %p@[30;43m%h[m: "

# sshrc
export SSHHOME="${XDG_CONFIG_HOME}/sshrc"

# Task
export TASKDATA="${XDG_DATA_HOME}/task"
export TASKRC="${XDG_CONFIG_HOME}/task/taskr"

# tmux / tmuxp
export TMUX_TMPDIR="${XDG_RUNTIME_DIR}"
export TMUXP_CONFIGDIR="${XDG_CONFIG_HOME}/tmuxp"

# Virtualbox
export VBOX_USER_HOME="${XDG_CONFIG_HOME}/virtualbox"

# Wine
if command -v wine >/dev/null 2>&1; then
  [ ! -d "${XDG_DATA_HOME}/wineprefixes" ] && mkdir -m 0700 "${XDG_DATA_HOME}/wineprefixes"
  export WINEPREFIX="${XDG_DATA_HOME}/wineprefixes/default"
fi

# Wget
if [ -f "${XDG_CONFIG_HOME}/wget/config" ]; then
  export WGETRC="${XDG_CONFIG_HOME}/wget/config"
fi

# vim: set ft=sh ts=2 sw=2 tw=80 et :
